const Sequelize = require('sequelize');

// Option 1: Passing parameters separately
const sequelize = new Sequelize(process.env.MYSQL_DB_NAME, process.env.MYSQL_USERNAME, process.env.MYSQL_PASSWORD, {
  host: process.env.MYSQL_HOST,
  dialect: 'mysql'
});

sequelize
  .authenticate()
  .then(() => {
    console.log('Connection has been established successfully.');
  })
  .catch(err => {
    console.error('Unable to connect to the database:', err);
});

const User = sequelize.define('users', {
    // attributes
    uid: {
        type: Sequelize.INTEGER,
        allowNull: false
    },
    name: {
        type: Sequelize.STRING,
        allowNull: false
    }
});

sequelize
  .sync( { force: true } ) // Force To re-initialize tables on each run
  .then(function (err) {
    console.log('It worked!');
    User.findAll().then(users => {
        if (users.length == 0) {
            // Create a new user
            User.create({ uid: 1, name: "Doe" }).then(ins => {
              console.log("added user successfuly");
            });
            
            User.create({ uid: 2, name: "sam" }).then(ins => {
              console.log("added user successfuly");
            });
        }
        // console.log("All users:", JSON.stringify(users, null, 4));
    });
  }, function (err) {
    console.log('An error occurred while creating the table:', err);
})
